generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  phone     String   @unique
  password  String
  name      String
  role      UserRole @default(ADMIN)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Customer {
  id        Int       @id @default(autoincrement())
  mobile    String    @unique
  name      String
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  createdBy String?   @default("Admin")
  updatedBy String?   @default("Admin")
  invoices  Invoice[]
}

model Invoice {
  id             Int           @id @default(autoincrement())
  invoiceNumber  String        @unique
  customerId     Int
  invoiceDate    DateTime
  deliveryDate   DateTime
  totalQuantity  Int
  totalPrice     Float?        @default(0)
  discountAmount Float?        @default(0)
  advanceAmount  Float?        @default(0)
  balanceAmount  Float?        @default(0)
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  createdBy      String?       @default("Admin")
  updatedBy      String?       @default("Admin")
  status         Int           @default(1)
  customer       Customer      @relation(fields: [customerId], references: [id], onDelete: Cascade)
  invoiceItems   InvoiceItem[]

  @@index([customerId, invoiceDate, deliveryDate, invoiceNumber])
}

model InvoiceItem {
  id          Int          @id @default(autoincrement())
  length      String
  shoulder    Float
  hand        Float
  handLoose   String
  neck        Float
  chestLoose  Float
  centreLoose String
  downLoose   Float
  open        Float
  button      String
  design      String
  pocket      EPocketStyle
  sewing      ESewingType
  sd          ESDType
  pan         EPanType
  description String?
  quantity    Int
  fabric      String
  name        String
  phul        String?
  isActive    Boolean      @default(true)
  invoiceId   Int?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  invoice     Invoice?     @relation(fields: [invoiceId], references: [id], onDelete: Cascade)

  @@index([invoiceId])
}

model DailyInvoiceSerial {
  serialDate    DateTime @id @db.Date
  currentSerial Int      @default(0)
}

enum EPocketStyle {
  P2_ADI
  P2_BAG
}

enum ESewingType {
  CHAP
  LOCK
}

enum ESDType {
  SD
  NO_SD
  KT
}

enum EPanType {
  PAN
  NO_PAN
}

enum UserRole {
  ADMIN
  EDITOR
}
